/* Importing Google Fonts - Nunito */
@import url("https://fonts.googleapis.com/css2?family=Nunito:wght@200&display=swap");

/* || Basic Reset Starts Here. */
* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
/* Basic Reset Ends Here. */

/* || Variables */
:root {
	/* Font Family and Size */
	--FONT-FAMILY: "Nunito", sans-serif;
	--FONT-SIZE: 1.25rem;

	/* Colors */
	--BG-COLOR: #707070;
	--HEADER-FOOTER-FONT-COLOR: whitesmoke;
	--BG-RADIAL-GRADIENT: radial-gradient(whitesmoke, #707070);
	--HEADER-FOOTER-BG-COLOR: #1d2f3e;

	/* Padding */
	--HEADER-FOOTER-PADDING: 1rem 2%;

	/* Hamburger Menu Button */
	--BAR-HEIGHT: 6px;
	--BAR-WIDTH: 50px;
	--BAR-BORDER-RADIUS: 20px;
	--BAR-GAP: 0.5rem;
	--BAR-TRANSITION-TIMING: 200ms;
	--BAR-TRANSITION-TIMING-FUNCTION: ease-in-out;
	--MENU-BUTTON-HEIGHT: calc(var(--BAR-HEIGHT) * 3 + var(--BAR-GAP) * 2);

	/* Just calculate the length of a diagonal using Pythagorean Theorem. */
	/* To find out the length of the diagonal, we just need to multiple the height of the menu button with square root of 2. */
	--SQRT-TWO: 1.41421356237;
	--BAR-DIAGONAL-WIDTH: calc(var(--MENU-BUTTON-HEIGHT) * var(--SQRT-TWO));
}

/* || Styles for BODY. */
body {
	font-family: var(--FONT-FAMILY);
	font-size: var(--FONT-SIZE);
	min-height: 100vh;

	display: flex;
	flex-direction: column;
	background-color: var(--BG-COLOR);
	background-image: var(--BG-RADIAL-GRADIENT);
	background-repeat: no-repeat;
}

/* || Styles for MAIN. */
main {
	flex-grow: 1;
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: -2;
}

/* || Header and Footer Styles. */
header,
footer {
	position: sticky;
	background-color: var(--HEADER-FOOTER-BG-COLOR);
	color: var(--HEADER-FOOTER-FONT-COLOR);
	display: flex;
	align-items: center;
}

header {
	top: 0;
	justify-content: space-between;
	padding: var(--HEADER-FOOTER-PADDING);
}

footer {
	bottom: 0;
	justify-content: center;
	padding: var(--HEADER-FOOTER-PADDING);
}

/* || Navigation Styles. */

/* Navigation Bar - Unordered List and List Item Styling.  */
nav ul {
	display: flex;
	justify-content: space-evenly;
	list-style-type: none;
}
nav ul li {
	margin: 0 1rem;
}

/* Navigation Bar - Links Styling.  */
/* "any-link" pseudo class will match all the links that are visited ot unvisited.  */
nav a:any-link {
	color: var(--HEADER-FOOTER-FONT-COLOR);
	text-decoration: none;
	font-weight: bold;
	display: block;
}


/* Navigation Bar - Links Styling on HOVER.  */
nav a:hover,
nav a:focus
{
	/* color: #FC6736; */
	color: aqua;
}

/* Navigation Bar - Visited Links Styling.  */
/* nav a:visited{
	color: yellow;
} */

/* Navigation Bar - Active Links Styling.  */
/* nav a:active{
	color: red;
} */



/* || Hamburger Menu - BUTTON Styling. */
.menuButton{
	position: absolute;
	right: 1rem;
	top: 1.5rem;
}

.menuButton {
	display: flex;
	flex-direction: column;
	gap: var(--BAR-GAP);
	cursor: pointer;
}

.menuButton::before,
.menuButton::after,
.menuButton input {
	content: "";
	height: var(--BAR-HEIGHT);
	width: var(--BAR-WIDTH);
	background-color: var(--HEADER-FOOTER-FONT-COLOR);
	border-radius: var(--BAR-BORDER-RADIUS);
	outline: 1px solid black;
}

.menuButton input {
	appearance: none;
	outline: none;

	/* "pointer-events" property makes sure that noone can click on this checkbox and we can easily handle all the interactions of checkbox with our menuButton label. */
	pointer-events: none;
}

.menuButton input:checked {
	transition-property: opacity, width;
	transition-duration: var(--BAR-TRANSITION-TIMING);
	transition-timing-function: var(--BAR-TRANSITION-TIMING-FUNCTION);
	opacity: 0;
	width: 0;
}

/* "has" pseudo class selects the input element only when it is checked and if the input is checked then we are selecting the befor/after element of our checkbox. */
.menuButton:has(input:checked)::before {
	rotate: 45deg;
	transform-origin: top left;
	width: var(--BAR-DIAGONAL-WIDTH);
	transform: translate(0, calc(var(--BAR-HEIGHT) / -2));

	/* Transition */
	transition-property: rotate, width, transform;
	transition-duration: var(--BAR-TRANSITION-TIMING);
	transition-timing-function: var(--BAR-TRANSITION-TIMING-FUNCTION);
}

.menuButton:has(input:checked)::after {
	rotate: -45deg;
	transform-origin: bottom left;
	width: var(--BAR-DIAGONAL-WIDTH);
	transform: translate(0, calc(var(--BAR-HEIGHT) / 2));

	
	/* Transition */
	transition-property: rotate, width, transform;
	transition-duration: var(--BAR-TRANSITION-TIMING);
	transition-timing-function: var(--BAR-TRANSITION-TIMING-FUNCTION);
}

/* || Media Queries. */
@media screen and (max-width: 665px) {
	header{
		position: relative;
		top: 0px;
		flex-direction: column;
		align-items: flex-start;
		padding: 0;
	}

	.headerTitle{
		padding: 1rem 2%;
	}
	.navigationMenu{
		width: 100%;
		position: absolute;
		top: 85px;
		left: 0;
		transform: translateY(-110%);
		transition: all 1s ease-in-out;
		background-color: var(--HEADER-FOOTER-BG-COLOR);
		z-index: -1;
	}
	
	nav ul{
		flex-direction: column;
		justify-content: center;
		align-items: center;
		width: 100%;
	}

	nav ul li{
		width: 100%;
		border-top: 1px solid var(--HEADER-FOOTER-FONT-COLOR);
	}

	nav a:any-link
	{
		text-align: center;
		padding: 1rem;
	}

	.menuButton:has(input:checked) + .navigationMenu{
		transform: translateY(0);
	}

}

@media screen and (min-width: 665px) {
	.menuButton {
		display: none;
	}
}
